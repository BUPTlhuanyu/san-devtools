<template>
    <div id="app">
        <sandevtool-navigation s-ref="nav" currentTab="{=currentTab=}" />
        <san-row type="flex" class="content">
            <div
                id="component_containter"
                class="container {{containerShown.component ? 'show' : ''}}"
            >
                <sandevtool-component
                    recording="{{historyRecording}}"
                    s-ref="comp"
                >
                </sandevtool-component>
            </div>
            <div
                id="store_containter"
                class="container {{containerShown.store ? 'show' : ''}}"
            >
                <sandevtool-store></sandevtool-store>
            </div>
            <div
                id="history_containter"
                class="container {{containerShown.history ? 'show' : ''}}"
            >
                <sandevtool-history></sandevtool-history>
            </div>
            <div
                id="routes_containter"
                class="container {{containerShown.routes ? 'show' : ''}}"
            >
                <sandevtool-routes></sandevtool-routes>
            </div>
        </san-row>
    </div>
</template>

<script>
import Messenger from 'chrome-ext-messenger';

import Grid from 'san-mui/lib/Grid';

import Navigation from './views/navigation.san';
import Component from './views/component.san';
import Store from './views/store.san';
import History from './views/history.san';
import Routes from './views/routes.san';

export default {

    components: {
        'san-row': Grid.Row,
        'sandevtool-navigation': Navigation,
        'sandevtool-component': Component,
        'sandevtool-store': Store,
        'sandevtool-history': History,
        'sandevtool-routes': Routes
    },

    initData() {
        return {
            current_component_id: '',
            currentTab: 'component',
            containerShown: {
                'component': true,
                'store': false,
                'routes': false,
                'history': false
            },
            historyRecording: false
        }
    },

    messages: {
        'UI:query-san-version-number'(arg) {
            arg.target.data.set('sanVersion',
                this[SAN_DEVTOOL]
                    && this[SAN_DEVTOOL].san
                    && this[SAN_DEVTOOL].san.version !== '##version##'
                        ? this[SAN_DEVTOOL].san.version
                        : '[unknown version]');
        },
        'UI:history-recording'(arg) {
            this.data.set('historyRecording', arg.value);
        }
    },

    attached() {
        this.watch('currentTab', value => {
            Object.keys(this.data.get('containerShown')).forEach(k => {
                this.data.set('containerShown.' + k, false);
            });
            this.data.set('containerShown.' + value, true); 
        });
    }


}

</script>

<style lang="stylus">
html, body
    font-family Roboto, Lato, sans-serif
    line-height 1.5
    font-size 14px
    font-weight 400
    margin 0
    width 100%
    overflow hidden

.content
    position absolute
    top 40px
    bottom 0
    width 100%
    .container
        width 100%
        height 100%
        display none
        &.show
            display block

#history_containter
    overflow-y auto
    padding 5px
    box-sizing border-box
#routes_containter
    overflow-y auto

.backdrop-blur, .sm-tree-view-filter-bar
    background-color rgba(236, 236, 236, .92) !important

@supports ((-webkit-backdrop-filter: blur(8px)) or (backdrop-filter: blur(8px)))
    .backdrop-blur, .sm-tree-view-filter-bar
        background-color rgba(236, 236, 236, .3) !important
        backdrop-filter blur(8px)

.sm-text-field-line
    background-color #ccc !important
</style>
