<template>
    <div id="app">
        <sandevtool-navigation s-ref="nav" currentTab="{=currentTab=}" />
        <san-row type="flex" class="content">
            <div
                id="component_containter"
                class="container {{containerShown.component ? 'show' : ''}}"
            >
                <sandevtool-component recording="{{historyRecording}}">
                </sandevtool-component>
            </div>
            <div
                id="store_containter"
                class="container {{containerShown.store ? 'show' : ''}}"
            >
            </div>
            <div
                id="history_containter"
                class="container {{containerShown.history ? 'show' : ''}}"
            >
                <sandevtool-history></sandevtool-history>
            </div>
        </san-row>
    </div>
</template>

<script>
import Messenger from 'chrome-ext-messenger2';
import {router} from 'san-router';

import Grid from 'san-mui/lib/Grid';

import routes from './routes';
import Navigation from './views/navigation.san';
import Component from './views/component.san';
import History from './views/history.san';

export default {

    components: {
        'san-row': Grid.Row,
        'sandevtool-navigation': Navigation,
        'sandevtool-component': Component,
        'sandevtool-history': History
    },

    initData() {
        return {
            current_component_id: '',
            currentTab: 'component',
            containerShown: {
                'component': true,
                'store': false,
                'history': false
            },
            historyRecording: false
        }
    },

    computed: {
        navTitle() {

        }
    },

    messages: {
        'UI:query-san-version-number'(arg) {
            arg.target.data.set('sanVersion',
                this[SAN_DEVTOOL]
                    && this[SAN_DEVTOOL].san
                    && this[SAN_DEVTOOL].san.version !== '##version##'
                        ? this[SAN_DEVTOOL].san.version
                        : '[unknown version]');
        },
        'UI:history-recording'(arg) {
            console.log('UI:history-recording', arg.value);
            this.data.set('historyRecording', arg.value);
        }
    },

    toggleMenu() {
    },

    inited() {
    },

    created() {
    },

    attached() {
        this.watch('currentTab', value => {
            console.log('currentTab', value);
            Object.keys(this.data.get('containerShown')).forEach(k => {
                this.data.set('containerShown.' + k, false);
            });
            this.data.set('containerShown.' + value, true); 
        });
    }


}

</script>

<style lang="stylus">

html, body
    font-family: Roboto, Lato, sans-serif
    line-height: 1.5
    font-size: 14px
    font-weight: 400
    margin: 0
    width: 100%
    overflow: hidden

.content
    position: absolute
    top: 56px
    bottom: 0
    width: 100%
    .container
        width: 100%
        height: 100%
        display: none
        &.show
            display: block

#history_containter
    overflow-y: auto
    padding: 5px
    box-sizing: border-box
</style>
