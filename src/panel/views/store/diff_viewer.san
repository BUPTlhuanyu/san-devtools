<template>
    <div>
        <div class="diff" s-for="diff, index in diffData">
            <san-divider s-if="index > 0" />
            <san-sub-header inset="{{!!0}}">Type: {{diff.$change}}</san-sub-header>
            <san-row class="switch-wrapper">
                <san-col
                    span="6"
                    class="old {{diffState[index]==='OFF' ? 'current' : ''}}"
                >
                    Old value
                </san-col>
                <san-col span="12" class="switch">
                    <san-switch
                        value="{=diffState[index]=}"
                    ></san-switch>
                </san-col>
                <san-col
                    span="6"
                    class="new {{diffState[index]==='ON' ? 'current' : ''}}"
                >
                    New value
                </san-col>
            </san-row>
            <san-row class="path">
                <san-col span="24">
                    <san-chip
                        s-for="t in diff.target"
                        class="target"
                    >
                        <san-avatar icon="chevron_right" />
                        {{t}}
                    </san-chip>
                </san-col>
            </san-row>
            <san-row class="json">
                <san-col span="24">
                    <san-json-tree-view
                        alwaysShowRoot="{{!0}}"
                        data="{{diffState[index]==='ON' ? diff.nValue : diff.oValue}}"
                        filterText="{{filterText}}"
                        rootName="data"
                        readonly="{{!0}}"
                    >
                    </san-json-tree-view>
                </san-col>
            </san-row>
        </div>
    </div>
</template>

<script>
import san, {DataTypes} from 'san';
import JSONView from 'json-tree-view';
import 'json-tree-view/devtools.css';
import Messenger from 'chrome-ext-messenger';

import SubHeader from 'san-mui/lib/SubHeader';
import Switch from 'san-mui/lib/Switch';
import {Row, Col} from 'san-mui/lib/Grid';
import Chip from 'san-mui/lib/Chip';
import Divider from 'san-mui/lib/Divider';
import Avatar from 'san-mui/lib/Avatar';
import 'san-mui/lib/SubHeader/SubHeader.styl';
import 'san-mui/lib/Switch/Switch.styl';
import 'san-mui/lib/Grid/Grid.styl';
import 'san-mui/lib/Chip/Chip.styl';
import 'san-mui/lib/Divider/Divider.styl';
import 'san-mui/lib/Avatar/Avatar.styl';

import JsonTreeView from '../../components/misc/json_tree_view';
import injector from '../../../js/host/injector';


let requestDiffData = index =>
    'window.' + SAN_DEVTOOL + '.store.mutations[' + index + '].diff';


export default {

    components: {
        'san-sub-header': SubHeader,
        'san-switch': Switch,
        'san-row': Row,
        'san-col': Col,
        'san-chip': Chip,
        'san-divider': Divider,
        'san-avatar': Avatar,
        'san-json-tree-view': JsonTreeView
    },

    initData() {
        return {
            diffData: [],
            diffState: ['ON'], 
            filterText: ''
        };
    },

    dataTypes: {
        diffData: DataTypes.arrayOf(DataTypes.object),
        diffState: DataTypes.arrayOf(DataTypes.oneOf(['ON', 'OFF'])),
        filterText: DataTypes.string
    },

    created() {
        this.watch('index', value => {
            this.data.set('diffData', []);
            injector.fromDevtool(requestDiffData(value)).then(data => {
                this.data.set('diffData', data);
                if (!data || !Array.isArray(data)) {
                    return;
                }
                this.data.set('diffState', Array(data.length).fill('ON'));
            });
        });
    }

}
</script>

<style lang="stylus">
.sm-divider
    margin-top 15px
.current
    color #ff4081
.diff
    .sm-row
        margin-bottom 10px
        .sm-chip
            transform scale(.8)
            .sm-avatar
                color #fff !important
.switch-wrapper
    > .sm-col
        text-align center
    .sm-switch
        width 80% !important
        margin 0 auto !important
        .sm-switch-container
            width 100% !important
            .sm-switch-thumb
                transform none !important
                left 0 !important
        input[type="checkbox"]:checked ~ .sm-switch-wrapper .sm-switch-thumb
            transform none !important
            left calc(100% - 20px) !important
    .sm-avatar
        color #000
</style>